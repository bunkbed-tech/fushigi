services:

  db:
    image: postgres:17
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [CMD, pg_isready, -U, postgres, -d, postgres, -q]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    volumes:
        - pg_data:/var/lib/postgresql/data
        - ./db-tools/sql:/docker-entrypoint-initdb.d
  
  test-db-tools:
    build:
      context: ./db-tools
      dockerfile: Dockerfile
    volumes:
      - ./db-tools:/app
    command: pytest

  generate-default-db:
    build:
      context: ./db-tools
      dockerfile: Dockerfile
    volumes:
      - ./db-tools:/app
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
      test-db-tools:
        condition: service_completed_successfully
   
  #test-backend:
  #  build:
  #    context: ./backend
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ./backend:/app
  #  command: pytest
    
  #run-backend:
  #  build:
  #    context: ./backend
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ./backend:/app
  #  depends_on:
  #    db:
  #      condition: service_healthy
  #    test-backend:
  #      condition: service_completed_successfully
        
  # Browser service to view postgres database
  adminer:
    image: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080

volumes:
  pg_data:
